# -*- coding: utf-8 -*-
"""csv-to-calphad-json-formatter.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DQKM_DrQcGTfWnklpc-BI58dA5GJ4B4E
"""

import pandas as pd
import json
import os

# Load the CSV file
file_path = 'OpenCalphad-train-conditional-test-12-alcrcofeni-4k-rows-DEDUP.csv'  # Replace with your file path
df = pd.read_csv(file_path)

# Filter out columns with "(at%)" in their names
at_percent_columns = [col for col in df.columns if "(at%)" in col]

# Directory to store JSON files
output_dir = "json_outputs"
os.makedirs(output_dir, exist_ok=True)

# Iterate over each row and generate JSON files
for idx, row in df.iterrows():
    composition = {}
    max_value = row[at_percent_columns].max()  # Identify the max value
    max_set = False  # To track if the first max value has been set to "True"

    # Create the composition dictionary
    for col in at_percent_columns:
        if row[col] == 0:  # Skip columns with zero values
            continue

        element = col.replace("(at%)", "").strip()  # Extract element name
        if row[col] == max_value and not max_set:  # First occurrence of max value
            is_base = True
            max_set = True  # Ensure subsequent max values are False
        else:
            is_base = False

        composition[element] = {
            "Base": str(is_base),  # Convert boolean to string
            "Comp": row[col]
        }

    # Construct the JSON structure
    json_data = {
        "Composition": composition,
        "Unit": "Mass percent"
    }

    # Save the JSON file if composition is not empty
    if composition:
        output_file = os.path.join(output_dir, f"row_{idx + 1}.json")
        with open(output_file, 'w') as json_file:
            json.dump(json_data, json_file, indent=4)

print(f"JSON files saved in '{output_dir}'")

