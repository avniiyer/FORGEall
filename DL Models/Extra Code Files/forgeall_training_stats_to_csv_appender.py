# -*- coding: utf-8 -*-
"""forgeall_training_stats_to_csv_appender.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TF5QnF7NJ4v_WBcggUnkGbB32d7PeDp8
"""

from datetime import datetime
import pytz
import os
import csv

def append_training_stats_to_csv(best_result, filename='hea_model_training_results.csv'):
    # Get the current time in PST
    pst = pytz.timezone('US/Pacific')
    current_time_pst = datetime.now(pst).strftime('%Y-%m-%d %H:%M:%S')

    # Prepare the row with the timestamp as the first field
    row = {'timestamp_PST': current_time_pst}

    # Add all key-value pairs from best_result to the row
    row.update(best_result)

    # Check if the file exists
    file_exists = os.path.isfile(filename)

    # If the file exists, read the current fieldnames (headers)
    if file_exists:
        with open(filename, mode='r') as file:
            reader = csv.DictReader(file)
            existing_fieldnames = reader.fieldnames
    else:
        existing_fieldnames = []

    # Combine the existing fieldnames with any new ones from the current row
    # Ensuring 'timestamp_PST' is always the first column
    fieldnames = ['timestamp_PST'] + [fn for fn in row.keys() if fn != 'timestamp_PST']

    # ** Inspect the fieldnames **
    #print("Fieldnames being used:")
    #print(fieldnames)

    # Open the file in append mode ('a') and create a CSV DictWriter
    with open(filename, mode='a', newline='') as file:
        writer = csv.DictWriter(file, fieldnames=fieldnames)

        # If the file doesn't exist, write the header first
        if not file_exists:
            writer.writeheader()

        # Append the row of data
        writer.writerow(row)